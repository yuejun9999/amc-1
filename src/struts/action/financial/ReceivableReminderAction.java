/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package struts.action.financial;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import orm.Receivable;
import orm.Receivabledetail;
import orm.User;
import dbconnection.MysqlCon;
import struts.form.ReceivableReminderForm;

/** 
 * MyEclipse Struts
 * Creation date: 02-10-2017
 * 
 * XDoclet definition:
 * @struts.action path="/receivableReminder" name="receivableReminderForm" input="/form/receivableReminder.jsp" scope="request" validate="true"
 */
public class ReceivableReminderAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws SQLException 
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws SQLException {
		ReceivableReminderForm receivableReminderForm = (ReceivableReminderForm) form;// TODO Auto-generated method stub
		int userID = receivableReminderForm.getUserID();
		int receivableID = receivableReminderForm.getReceivableID();
		int currentUser = receivableReminderForm.getCurrentUser();
		MysqlCon mysqlcon = new MysqlCon();
		
		if (userID<0) {
			//Ð´ÈëÊý¾Ý¿â
//			Connection conn = mysqlcon.connection();
			mysqlcon.update("update receivable set userID="+currentUser+" where receivableID="+receivableID);			
		}
		
		SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd"); 
		Connection conn = mysqlcon.connection();
		ResultSet rs = mysqlcon.query("select parcelsID, totalAccount, userID from receivable where receivableID="+receivableID, conn);	
		int parcelsID = rs.getInt(1);
		float totalAccount = rs.getFloat(2);
		int reminderUserID = rs.getInt(3);
		rs.close();
		
		ResultSet parcelRS = mysqlcon.query("select parcelsDate from parcels where parcelsID="+ parcelsID,conn);
		String parcelsDate = formatter.format(parcelRS.getTimestamp(1));
		parcelRS.close();
		
		ResultSet staffRS = mysqlcon.query("select staffName from staff where staffID = (select staffID from user where userID="+reminderUserID+")", conn);
		String reminderUserName = staffRS.getString(1);
		staffRS.close();
		
		ResultSet orderRS = mysqlcon.query("select * from amc.order where orderID =(SELECT orderID FROM amc.picking where pickingID=(select pickingID from amc.parcels where parcelsID="+parcelsID+"))", conn);
		int orderID = orderRS.getInt(1);
		int customerID = orderRS.getInt(2);
		
		String orderDate = formatter.format(orderRS.getTimestamp(3));
		String receiveAddress = orderRS.getString(4);
		String receiveMan = orderRS.getString(5);
		orderRS.close();
		
		ResultSet customerRS = mysqlcon.query("select * from customer where customerID="+ customerID, conn);
		String customerName = customerRS.getString(2);
		String customerAddress = customerRS.getString(3);
		customerRS.close();
		
		ResultSet receivableDetailRS = mysqlcon.query("select * from receivabledetail where receivableID="+receivableID, conn);
		List rdList = new ArrayList();
		int count=0;
		do{
			count++;
			Receivabledetail rd = new Receivabledetail();
			rd.setCount(count);
			rd.setReceivableDetailId(receivableDetailRS.getInt(1));
			rd.setProductID(receivableDetailRS.getInt(3));
			rd.setProductName(receivableDetailRS.getString(4));
			rd.setSalePrice(receivableDetailRS.getFloat(5));
			rd.setSaleAmount(receivableDetailRS.getFloat(6));
			rd.setTotalAccount(receivableDetailRS.getFloat(7));
			
			rdList.add(rd);
		}while(receivableDetailRS.next());
		
		receivableDetailRS.close();
		
		HttpSession session = request.getSession();
		session.setAttribute("customerName", customerName);
		session.setAttribute("receivableReminder", reminderUserName);
		session.setAttribute("parcelID", parcelsID);
		session.setAttribute("parcelsDate", parcelsDate);
		session.setAttribute("orderID", orderID);
		session.setAttribute("orderDate", orderDate);
		session.setAttribute("receiverName", receiveMan);
		session.setAttribute("receiveAddress", receiveAddress);
		session.setAttribute("totalAccount", totalAccount);
		
		session.setAttribute("receivableDetails", rdList);
		return mapping.findForward("receivableReminder");
		
	}
}