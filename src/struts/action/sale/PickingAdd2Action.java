/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package struts.action.sale;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import dbconnection.MysqlCon;
import struts.action.Result;
import struts.action.ResultBasedAction;
import struts.action.StringResult;
import orm.User;

/** 
 * MyEclipse Struts
 * Creation date: 02-09-2017
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class PickingAdd2Action extends ResultBasedAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	

	@Override
	public Result execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request) throws Exception {
		String msg="操作失败";
		String orderid=request.getParameter("orderid");
		String outstockid=request.getParameter("outstockid");
		Date time=new Date();
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		String pickingtime=sdf.format(time);
		System.out.println(pickingtime);
		HttpSession session = request.getSession();
		User user=(User)session.getAttribute("user");
		int userid=user.getUserId();
		MysqlCon msq=new MysqlCon();
		msq.update("update amc.order set amc.order.orderState='已处理' where amc.order.orderID="+orderid);//更新订单状态
		msq.insert("insert into amc.picking(orderID,userID,pickingTime,pickingState) values("+orderid+","+userid+",'"+pickingtime+"','未处理')");
		int pickingid=0;
		try{
			Connection conn=msq.connection();
			ResultSet rs=msq.query("select pickingID from amc.picking where pickingTime='"+pickingtime+"'",conn);
			rs.beforeFirst();
			while(rs.next()){
				pickingid=rs.getInt(1);
			}
			rs=msq.query("select outstockdetail.productID,outstockdetail.outStockNum,product.amount from amc.outstockdetail,amc.product where outstockdetail.productID=product.productID and outstockdetail.outstockID="+outstockid,conn);
			rs.beforeFirst();
			while(rs.next()){
			
					msq.insert("insert into amc.pickingdetail(pickingID,productID,pickingNum) values("+pickingid+","+rs.getInt(1)+","+rs.getFloat(2)+")");
					msq.update("update amc.product set amount="+(rs.getFloat(3)-rs.getFloat(2))+" where productID="+rs.getInt(1));
				
			}
			msg="操作成功！";
		}catch (SQLException e) {
			e.printStackTrace();
		}
		StringResult string=new StringResult(msg);
		return string;
	}
}