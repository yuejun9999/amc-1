/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package struts.action.financial;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import orm.Payable;
import dbconnection.MysqlCon;

/** 
 * MyEclipse Struts
 * Creation date: 02-12-2017
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class PayableAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws SQLException 
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws SQLException {
		// TODO Auto-generated method stub
		
		MysqlCon mysqlCon = new MysqlCon();
		Connection conn = mysqlCon.connection();
		ResultSet rs = mysqlCon.query("select payableID, importPdID,totalAccount,invoiceRange,"
				+ "addTime, payState, staffName from payable,user,staff where "
				+ "payable.userID=user.userID and staff.staffID=user.staffID", conn);
		List payableList = new ArrayList();
		int counter=0;
		if (rs != null){
			do{
				Payable payable = new Payable();
				payable.setCounter(++counter);
				payable.setPayableId(rs.getInt(1));
				payable.setImportpdId(rs.getInt(2));
				payable.setTotalAccount(rs.getFloat(3));
				payable.setInvoiceRange(rs.getString(4));
				Timestamp addTime = rs.getTimestamp(5);
				SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
				String addTimeString = formatter.format(addTime);
				payable.setAddTime(addTimeString);
				payable.setPayState(rs.getString(6));
				payable.setUserName(rs.getString(7));
				
				payableList.add(payable);
			}while(rs.next());
			rs.close();
		}
		conn.close();
		
		request.getSession().setAttribute("payableList", payableList);
		
		
		return mapping.findForward("payable");
	}
}